{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91830\\\\OneDrive\\\\Desktop\\\\Projects\\\\HttpConnection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setmovies] = useState([]);\n  const [loading, isloading] = useState(false);\n  async function FetchMovieHandler() {\n    isloading(true);\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n    const transformedData = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        releaseDate: movieData.release_date,\n        openingText: movieData.opening_crawl\n      };\n    });\n    setmovies(transformedData);\n    isloading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: FetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!loading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }, this), loading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 41\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9BSLr1XZCV64jLZrmOlEM5ghiLQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MoviesList","useState","jsxDEV","_jsxDEV","App","_s","movies","setmovies","loading","isloading","FetchMovieHandler","response","fetch","data","json","transformedData","results","map","movieData","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/91830/OneDrive/Desktop/Projects/HttpConnection/src/App.js"],"sourcesContent":["import React from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [movies ,setmovies] = useState([]);\n  const[loading, isloading]= useState(false);\nasync function FetchMovieHandler() {\n  isloading(true);\n const response = await fetch (\"https://swapi.dev/api/films/\")\n const data = await response.json();\n\n    const transformedData = data.results.map((movieData) =>{\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        releaseDate : movieData.release_date,\n        openingText :movieData.opening_crawl\n\n      };\n    });\n    setmovies(transformedData);\n    isloading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={FetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n       {!loading && movies.length>0 && <MoviesList movies={movies} />}\n       {loading && movies.length===0 && <p>No movies found</p>}\n       {loading && <p>Loading....</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACO,OAAO,EAAEC,SAAS,CAAC,GAAER,QAAQ,CAAC,KAAK,CAAC;EAC5C,eAAeS,iBAAiBA,CAAA,EAAG;IACjCD,SAAS,CAAC,IAAI,CAAC;IAChB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA8B,CAAC;IAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAE/B,MAAMC,eAAe,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAI;MACrD,OAAO;QACLC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAGJ,SAAS,CAACK,YAAY;QACpCC,WAAW,EAAEN,SAAS,CAACO;MAEzB,CAAC;IACH,CAAC,CAAC;IACFlB,SAAS,CAACQ,eAAe,CAAC;IAC1BN,SAAS,CAAC,KAAK,CAAC;EAClB;EAEA,oBACEN,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbxB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQyB,OAAO,EAAElB,iBAAkB;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjD,eACV7B,OAAA;MAAAwB,QAAA,GACE,CAACnB,OAAO,IAAIF,MAAM,CAAC2B,MAAM,GAAC,CAAC,iBAAI9B,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEA;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC7DxB,OAAO,IAAIF,MAAM,CAAC2B,MAAM,KAAG,CAAC,iBAAI9B,OAAA;QAAAwB,QAAA,EAAG;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EACtDxB,OAAO,iBAAIL,OAAA;QAAAwB,QAAA,EAAG;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAErB;AAAC3B,EAAA,CAlCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}